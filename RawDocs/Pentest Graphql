Pentest Graphql endpoint
----------------------------

https://medium.com/@localh0t/discovering-graphql-endpoints-and-sqli-vulnerabilities-5d39f26cea2e

https://prog.world/pentest-applications-with-graphql/


https://blog.morethancode.dev/preventing-traversal-attacks-in-your-graphql-api/


Topic:
---------
Pentesting GraphQL

1. What is GraphQL
2. Rest v/s GraphQL
3. Basics and Architectutre
4. Pentesting GraphQL:
       
        *Tools
        *Enumeration
        *Introspection
        *SQLinjection
        *Information Disclosure
        *Broken Access Control
        *Authorization Bypass
        *Brute Force/DOS


Basics
-------
1.Query, Character, Human, Episode, Droid - These are the ones that we defined in our type system.
2.String, Boolean - These are built-in scalars that the type system provided.
3. __Schema, __Type, __TypeKind, __Field, __InputValue, __EnumValue, __Directive - they are part of the introspection system


 __Schema : It returns which types the schema has (types), the queryType which is the schemaâ€™s entry-point for queries, the mutationType and subscriptionType and the directives available.
 
__type :represents the types defined in the system. We can query the type of an object and get its information.



Introspection
------------------


1.
2. show all mutations (queryType,subscriptionType)

 query {
  __schema {
    mutationType {
      fields {
        name
        args {
          name
        }
        
      }
    }
  }
}



Download :
https://github.com/righettod/poc-graphql


 The jar file will be created in the folder target and will be named graphql-poc.jar.
 Use the command java -jar graphql-poc.jar to run the application.

 Access the labs using:
 http://localhost:8080/graphiql




Tools:
----------
1.GraphiQL ide
2.GraphQL Raider - burp extension
3.GraphQL_Introspection.py
   
 python GraphQL_Introspection.py -t http://target-url/graphql


